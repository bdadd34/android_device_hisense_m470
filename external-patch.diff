diff -Naur a/external/icu4c/common/ucnv.c b/external/icu4c/common/ucnv.c
--- a/external/icu4c/common/ucnv.c	2014-03-09 19:13:07.391270475 -0400
+++ b/external/icu4c/common/ucnv.c	2014-02-23 14:08:20.623648000 -0500
@@ -2906,6 +2906,145 @@
             return FALSE;
     }
 }
+
+U_CAPI void    U_EXPORT2 ucnv_setToUCallBack_46 (UConverter * converter,
+                            UConverterToUCallback newAction,
+                            const void* newContext,
+                            UConverterToUCallback *oldAction,
+                            const void** oldContext,
+                            UErrorCode * err) {
+       ucnv_setToUCallBack(converter, newAction, newContext,
+                               oldAction, oldContext, err);
+}
+
+U_CAPI void  U_EXPORT2 ucnv_close_46 (UConverter * converter) {
+       ucnv_close (converter);
+}
+
+U_CAPI void  U_EXPORT2
+ucnv_setFromUCallBack_46 (UConverter * converter,
+                            UConverterFromUCallback newAction,
+                            const void* newContext,
+                            UConverterFromUCallback *oldAction,
+                            const void** oldContext,
+                            UErrorCode * err) {
+
+       ucnv_setFromUCallBack(converter, newAction, newContext, oldAction,
+                               oldContext, err);
+}
+
+U_CAPI void U_EXPORT2
+ucnv_convertEx_46(UConverter *targetCnv, UConverter *sourceCnv,
+               char **target, const char *targetLimit,
+               const char **source, const char *sourceLimit,
+               UChar *pivotStart, UChar **pivotSource,
+               UChar **pivotTarget, const UChar *pivotLimit,
+               UBool reset, UBool flush,
+               UErrorCode *pErrorCode) {
+       ucnv_convertEx(targetCnv, sourceCnv, target, targetLimit, source,
+                               sourceLimit, pivotStart, pivotSource,
+                               pivotTarget, pivotLimit, reset, flush,
+                               pErrorCode);
+}
+
+U_CAPI UConverter* U_EXPORT2
+ucnv_open_46 (const char *name,
+                       UErrorCode * err) {
+       return ucnv_open(name, err);
+}
+
+U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_STOP_46 (
+                  const void *context,
+                  UConverterFromUnicodeArgs *fromUArgs,
+                  const UChar* codeUnits,
+                  int32_t length,
+                  UChar32 codePoint,
+                  UConverterCallbackReason reason,
+                  UErrorCode * err) {
+       return UCNV_FROM_U_CALLBACK_STOP(context, fromUArgs, codeUnits,
+                       length, codePoint, reason, err);
+}
+
+U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_STOP_46 (
+                  const void *context,
+                  UConverterToUnicodeArgs *toUArgs,
+                  const char* codeUnits,
+                  int32_t length,
+                  UConverterCallbackReason reason,
+                  UErrorCode * err) {
+       return UCNV_TO_U_CALLBACK_STOP(context, toUArgs, codeUnits, length,
+                       reason, err);
+}
+
+U_CAPI void    U_EXPORT2 ucnv_setToUCallBack_48 (UConverter * converter,
+                            UConverterToUCallback newAction,
+                            const void* newContext,
+                            UConverterToUCallback *oldAction,
+                            const void** oldContext,
+                            UErrorCode * err) {
+  ucnv_setToUCallBack(converter, newAction, newContext,
+        oldAction, oldContext, err);
+}
+
+U_CAPI void  U_EXPORT2 ucnv_close_48 (UConverter * converter) {
+  ucnv_close (converter);
+}
+
+U_CAPI void  U_EXPORT2
+ucnv_setFromUCallBack_48 (UConverter * converter,
+                            UConverterFromUCallback newAction,
+                            const void* newContext,
+                            UConverterFromUCallback *oldAction,
+                            const void** oldContext,
+                            UErrorCode * err) {
+
+  ucnv_setFromUCallBack(converter, newAction, newContext, oldAction,
+        oldContext, err);
+}
+
+U_CAPI void U_EXPORT2
+ucnv_convertEx_48 (UConverter *targetCnv, UConverter *sourceCnv,
+               char **target, const char *targetLimit,
+               const char **source, const char *sourceLimit,
+               UChar *pivotStart, UChar **pivotSource,
+               UChar **pivotTarget, const UChar *pivotLimit,
+               UBool reset, UBool flush,
+               UErrorCode *pErrorCode) {
+  ucnv_convertEx(targetCnv, sourceCnv, target, targetLimit, source,
+        sourceLimit, pivotStart, pivotSource,
+        pivotTarget, pivotLimit, reset, flush,
+        pErrorCode);
+}
+
+U_CAPI UConverter* U_EXPORT2
+ucnv_open_48 (const char *name,
+                       UErrorCode * err) {
+  return ucnv_open(name, err);
+}
+
+U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_STOP_48 (
+                  const void *context,
+                  UConverterFromUnicodeArgs *fromUArgs,
+                  const UChar* codeUnits,
+                  int32_t length,
+                  UChar32 codePoint,
+                  UConverterCallbackReason reason,
+                  UErrorCode * err) {
+  return UCNV_FROM_U_CALLBACK_STOP(context, fromUArgs, codeUnits,
+      length, codePoint, reason, err);
+}
+
+U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_STOP_48 (
+                  const void *context,
+                  UConverterToUnicodeArgs *toUArgs,
+                  const char* codeUnits,
+                  int32_t length,
+                  UConverterCallbackReason reason,
+                  UErrorCode * err) {
+  return UCNV_TO_U_CALLBACK_STOP(context, toUArgs, codeUnits, length,
+      reason, err);
+}
+
 #endif
 
 /*
diff -Naur a/external/tinyalsa/Android.mk b/external/tinyalsa/Android.mk
--- a/external/tinyalsa/Android.mk	2014-03-09 19:13:54.827270089 -0400
+++ b/external/tinyalsa/Android.mk	2014-02-23 00:50:07.098641000 -0500
@@ -1,5 +1,7 @@
 LOCAL_PATH:= $(call my-dir)
 
+ifneq ($(TARGET_DEVICE),m470)
+
 include $(CLEAR_VARS)
 LOCAL_C_INCLUDES:= external/tinyalsa/include
 LOCAL_SRC_FILES:= mixer.c pcm.c
@@ -8,6 +10,7 @@
 LOCAL_MODULE_TAGS := optional
 LOCAL_PRELINK_MODULE := false
 include $(BUILD_SHARED_LIBRARY)
+endif
 
 ifeq ($(HOST_OS), linux)
 include $(CLEAR_VARS)
diff -Naur a/external/wpa_supplicant_8/Android.mk b/external/wpa_supplicant_8/Android.mk
--- a/external/wpa_supplicant_8/Android.mk	2014-03-09 19:14:20.787269878 -0400
+++ b/external/wpa_supplicant_8/Android.mk	2014-03-09 09:11:46.279564000 -0400
@@ -1,4 +1,5 @@
 LOCAL_PATH:= $(call my-dir)
+ifneq ($(TARGET_DEVICE),m470)
 
 ifndef WPA_SUPPLICANT_VERSION
 WPA_SUPPLICANT_VERSION := VER_0_8_X
@@ -14,4 +15,4 @@
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_2_1_DEVEL)
 include $(call all-subdir-makefiles)
 endif
-
+endif
diff -Naur a/frameworks/native/libs/binder/IPCThreadState.cpp b/frameworks/native/libs/binder/IPCThreadState.cpp
--- a/frameworks/native/libs/binder/IPCThreadState.cpp	2014-03-10 14:37:21.214701851 -0400
+++ b/frameworks/native/libs/binder/IPCThreadState.cpp	2013-12-16 22:34:58.190829000 -0500
@@ -362,6 +362,14 @@
     return err;
 }
 
+extern "C" int _ZN7android14IPCThreadState13getCallingPidEv(IPCThreadState *state) {
+    return state->getCallingPid();
+}
+
+extern "C" int _ZN7android14IPCThreadState13getCallingUidEv(IPCThreadState *state) {
+    return state->getCallingUid();
+}
+
 int IPCThreadState::getCallingPid() const
 {
     return mCallingPid;
